{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MIMOSA CCOM 4.1 JSON Schema",
  "description": "Copyright 2020 MIMOSA. All Rights Reserved. http://www.mimosa.org\n\nThis content is released under the MIMOSA Intellectual Property Rights Policy.\nSee the file LICENSE.txt accompanying this file or the MIMOSA website for details.",
  "id": "https://www.mimosa.org/ccom4/CCOM.json#",
  "version": "4.1.0-draft",
  "definitions": {
    "02-CoreTypes": {
      "definitions": {
        "BinaryData": {
          "id": "BinaryData",
          "type": "object",
          "properties": {
            "standardDataType": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/StandardDataType"
            },
            "data": {
              "$ref": "CoreComponentType_2p0.json#/definitions/BinaryObjectType"
            },
            "unitOfMeasure": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UnitOfMeasure"
            }
          },
          "required": [
            "data",
            "standardDataType",
            "unitOfMeasure"
          ],
          "additionalProperties": false
        },
        "BinaryObject": {
          "id": "BinaryObject",
          "type": "object",
          "properties": {
            "blobDataType": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BLOBDataType"
            },
            "value": {
              "$ref": "CoreComponentType_2p0.json#/definitions/BinaryObjectType"
            }
          },
          "required": [
            "blobDataType",
            "value"
          ],
          "additionalProperties": false
        },
        "BLOBDataType": {
          "id": "BLOBDataType",
          "description": "Different kinds of Binary Large Object (BLOB) data such as a Bitmapped Drawing or Image, Ferrographic Image, Thermographic Image, Digitized Video Clip, Document, etc.",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "BLOBDataType"
              ]
            }
          }
        },
        "Coordinate": {
          "id": "Coordinate",
          "type": "object",
          "properties": {
            "x": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "y": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "z": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          },
          "required": [
            "x",
            "y"
          ],
          "additionalProperties": false
        },
        "Measure": {
          "id": "Measure",
          "type": "object",
          "properties": {
            "value": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "unitOfMeasure": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UnitOfMeasure"
            }
          },
          "required": [
            "value"
          ],
          "additionalProperties": false
        },
        "MultiParameter": {
          "id": "MultiParameter",
          "type": "object",
          "properties": {
            "valueContents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent"
              }
            }
          },
          "additionalProperties": false
        },
        "Percentage": {
          "id": "Percentage",
          "description": "A Percentage is a way of expressing a number as a fraction of 100.",
          "allOf": [
            {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          ]
        },
        "Probability": {
          "id": "Probability",
          "description": "A Probability is way of expressing a likelihood and is generally represented by numbers in the range 0 to 1.",
          "allOf": [
            {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          ]
        },
        "StandardDataType": {
          "id": "StandardDataType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "StandardDataType"
              ]
            }
          }
        },
        "UTCDateTime": {
          "id": "UTCDateTime",
          "description": "UTCDateTime is used for date and/or time representations as Coordinated Universal Time.",
          "allOf": [
            {
              "$ref": "CoreComponentType_2p0.json#/definitions/DateTimeType"
            }
          ],
          "properties": {
            "@locHrDeltaFromUTC": {
              "type": "integer"
            },
            "@locMinDeltaFromUTC": {
              "type": "integer",
              "minimum": 0,
              "maximum": 59
            }
          }
        },
        "UUID": {
          "id": "UUID",
          "description": "A UUID is represented by 32 hexadecimal digits, displayed in five groups separated by hyphens, in the form `8-4-4-4-12` for a total of 36 characters (for example, 123e4567-e89b-12d3-a456-426655440000). See RFC 4122 - A Universally Unique IDentifier (UUID) URN Namespace.",
          "type": "string",
          "format": "uuid",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "URI": {
          "id": "URI",
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "format": "uri"
            },
            "@resourceName": {
              "type": "string"
            }
          },
          "required": [
            "identifier"
          ]
        },
        "ValueContent": {
          "id": "ValueContent",
          "oneOf": [
            {
              "properties": {
                "binaryData": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BinaryData"
                }
              },
              "required": [
                "binaryData"
              ]
            },
            {
              "properties": {
                "binaryObject": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BinaryObject"
                }
              },
              "required": [
                "binaryObject"
              ]
            },
            {
              "properties": {
                "boolean": {
                  "type": "boolean"
                }
              },
              "required": [
                "boolean"
              ]
            },
            {
              "properties": {
                "coordinate": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Coordinate"
                }
              },
              "required": [
                "coordinate"
              ]
            },
            {
              "properties": {
                "enumerationItem": {
                  "$ref": "CCOM.json#/definitions/03-Core/definitions/EnumerationItem"
                }
              },
              "required": [
                "enumerationItem"
              ]
            },
            {
              "properties": {
                "measure": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
                }
              },
              "required": [
                "measure"
              ]
            },
            {
              "properties": {
                "multiParameter": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/MultiParameter"
                }
              },
              "required": [
                "multiParameter"
              ]
            },
            {
              "properties": {
                "number": {
                  "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
                }
              },
              "required": [
                "number"
              ]
            },
            {
              "properties": {
                "percentage": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Percentage"
                }
              },
              "required": [
                "percentage"
              ]
            },
            {
              "properties": {
                "probability": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Probability"
                }
              },
              "required": [
                "probability"
              ]
            },
            {
              "properties": {
                "text": {
                  "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
                }
              },
              "required": [
                "text"
              ]
            },
            {
              "properties": {
                "URI": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/URI"
                }
              },
              "required": [
                "URI"
              ]
            },
            {
              "properties": {
                "UTCDateTime": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
                }
              },
              "required": [
                "UTCDateTime"
              ]
            },
            {
              "properties": {
                "UUID": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UUID"
                }
              },
              "required": [
                "UUID"
              ]
            },
            {
              "properties": {
                "xml": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/XML"
                }
              },
              "required": [
                "xml"
              ]
            },
            {
              "properties": {
                "json": {
                  "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/JSON"
                }
              },
              "required": [
                "json"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/1"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/2"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/3"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/4"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/5"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/6"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/7"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/8"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/9"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/10"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/11"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/12"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/13"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/14"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent/oneOf/15"
                  }
                ]
              }
            }
          ]
        },
        "ValueClass": {
          "id": "ValueClass",
          "type": "string",
          "enum": [
            "BinaryData",
            "BinaryObject",
            "Boolean",
            "Coordinate",
            "EnumerationItem",
            "Measure",
            "MultiParameter",
            "Number",
            "Percentage",
            "Probability",
            "Text",
            "URI",
            "UTCDateTime",
            "UUID",
            "XML",
            "JSON"
          ]
        },
        "XML": {
          "id": "XML",
          "type": "object",
          "properties": {
            "@format": {
              "type": "string"
            },
            "xml": {
              "type": "string"
            }
          },
          "required": [
            "@format",
            "xml"
          ],
          "additionalProperties": false
        },
        "JSON": {
          "id": "JSON",
          "description": "Equivalent to XML for including additional/custom JSON that is not CCOM content.\nThe @format property can specify a JSON schema to which the content conforms. Unlike the XML property, the @format is optional as there may not be a JSON schema for the content.",
          "type": "object",
          "properties": {
            "@format": {
              "type": "string"
            }
          },
          "additionalProperties": true
        }
      }
    },
    "03-Core": {
      "definitions": {
        "Property": {
          "id": "Property",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "oneOf": [
            {
              "properties": {
                "type": {
                  "$ref": "CCOM.json#/definitions/03-Core/definitions/PropertyType"
                }
              },
              "required": [
                "type"
              ]
            },
            {
              "properties": {
                "definition": {
                  "$ref": "CCOM.json#/definitions/04-PropertySets/definitions/PropertyDefinition"
                }
              },
              "required": [
                "definition"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/Property/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/Property/oneOf/1"
                  }
                ]
              }
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Property"
              ]
            },
            "valueContent": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent"
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "valueIsValidInDefinition": {
              "description": "Sometimes it is necessary to exchange values that do not conform to the definition of allowable value for a Property. When set to 'false', this property flags that the value is known to *not* conform to the PropertyDefinition/PropertyType of the Property. If the Property does not have an associated definition or type, the value of this property makes no difference.\nBy default this property is 'true'.",
              "type": "boolean",
              "default": "true"
            }
          }
        },
        "PropertyType": {
          "id": "PropertyType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "oneOf": [
            {
              "properties": {
                "uomQuantity": {
                  "$ref": "CCOM.json#/definitions/03-Core/definitions/UOMQuantity"
                }
              },
              "required": [
                "uomQuantity"
              ]
            },
            {
              "properties": {
                "enumeration": {
                  "$ref": "CCOM.json#/definitions/03-Core/definitions/Enumeration"
                }
              },
              "required": [
                "enumeration"
              ]
            },
            {
              "properties": {
                "multiParameterType": {
                  "$ref": "CCOM.json#/definitions/03-Core/definitions/MultiParameterType"
                }
              },
              "required": [
                "multiParameterType"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/PropertyType/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/PropertyType/oneOf/1"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/PropertyType/oneOf/2"
                  }
                ]
              }
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "PropertyType"
              ]
            },
            "valueClass": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueClass"
            }
          }
        },
        "BaseType": {
          "id": "BaseType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "propertySetDefinitionForType": {
              "type": "null"
            },
            "validLifecycleStatusKinds": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/LifecycleStatusKind"
              }
            }
          },
          "incpomplete": true
        },
        "CCOMClass": {
          "id": "CCOMClass",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "CCOMClass"
              ]
            },
            "propertyDefinition": {
              "type": "null"
            },
            "taxonomy": {
              "description": "The relationship from a Taxonomy to CCOMClass associates a taxonomy with the class it represents. This aids in filtering taxonomies to a certain type and provides type constraints for taxonomies.",
              "type": "null"
            },
            "validLifecycleStatusKinds": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/LifecycleStatusKind"
              }
            }
          },
          "incomplete": true
        },
        "EffectiveStatus": {
          "description": "The status of an entity with respect to its effectivity.\nIt can be used for indicating when a record became/will become active or inactive.",
          "id": "EffectiveStatus",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "EffectiveStatus"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/EffectiveStatusType"
            },
            "effectiveDate": {
              "description": "Date from when the status applies.\nTo avoid ambiguity, there should not be multiple EffectiveStatuses for an entity with the same effective date.\nNo date implies that the status has always been effective. There should not be multiple EffectiveStatuses with no effective date specified.\nDates can also be specified in the future (e.g. go-live on certain date).",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            }
          },
          "required": [
            "type"
          ]
        },
        "EffectiveStatusType": {
          "id": "EffectiveStatusType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "EffectiveStatusType"
              ]
            }
          }
        },
        "Entity": {
          "description": "The base abstract class that all CCOM classes with identity are derived from.",
          "id": "Entity",
          "oneOf": [
            {
              "properties": {
                "effectiveStatuses": {
                  "type": "array",
                  "items": {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/EffectiveStatus"
                  }
                }
              },
              "required": [
                "effectiveStatuses"
              ]
            },
            {
              "properties": {
                "effectiveStatusType": {
                  "$ref": "CCOM.json#/definitions/03-Core/definitions/EffectiveStatus"
                }
              },
              "required": [
                "effectiveStatusType"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity/oneOf/1"
                  }
                ]
              }
            }
          ],
          "properties": {
            "UUID": {
              "description": "Immutable, Universally Unique Identifier.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UUID"
            },
            "IDInInfoSource": {
              "description": "An unambiguous reference to the data in the registration InfoSource that identifies the corresponding object.",
              "$ref": "CoreComponentType_2p0.json#/definitions/IDType"
            },
            "infoSource": {
              "description": "Information source or System of Record that was the source for the data.",
              "$ref": "CCOM.json#/definitions/03-Core/definitions/InfoSource"
            },
            "created": {
              "description": "Point in time when the entity was created.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "creator": {
              "description": "The agent primarily responsible for creating the entity.",
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
            },
            "lastEdited": {
              "description": "Point in time when the entity was last modified.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "lastEditor": {
              "description": "The agent who last modified the entity.",
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
            },
            "presentLifecycleStatus": {
              "description": "Present lifecycle status.\n\nThere may be multiple LifecycleStatusKinds applicable for an entity; therefore, an entity may have at most one of each.\n\nIf the present lifecycle status is changed for an entity, the new status should be consistent with the old, i.e., it should at least be of the same type.",
              "type": "null"
            },
            "lifecycleStatusHistory": {
              "description": "Past/present/future lifecycle status.",
              "type": "null"
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/Property"
              }
            },
            "propertySetForEntity": {
              "type": "null"
            }
          },
          "required": [
            "UUID"
          ],
          "incomplete": true
        },
        "Enumeration": {
          "id": "Enumeration",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Enumeration"
              ]
            },
            "enumerationItems": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/EnumerationItem"
              }
            }
          }
        },
        "EnumerationItem": {
          "id": "EnumerationItem",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "EnumerationItem"
              ]
            },
            "enumeration": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Enumeration"
            }
          }
        },
        "Equivalency": {
          "id": "Equivalency",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Equivalency"
              ]
            },
            "entity": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            "equivalent": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            "likelihood": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Probability"
            }
          },
          "required": [
            "entity",
            "equivalent"
          ]
        },
        "InfoSource": {
          "description": "A collection of data or information.",
          "id": "InfoSource",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "InfoSource"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/InfoSourceType"
            },
            "registrationSite": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
            },
            "url": {
              "description": "The location of the information, such as a hyperlink.",
              "type": "string",
              "format": "uri"
            }
          }
        },
        "InfoSourceType": {
          "id": "InfoSourceType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "InfoSourceType"
              ]
            }
          }
        },
        "MultiParameterType": {
          "id": "MultiParameterType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MultiParameterType"
              ]
            },
            "propertyDefinitions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/04-PropertySets/definitions/PropertyDefinition"
              }
            }
          }
        },
        "Nameable": {
          "id": "Nameable",
          "properties": {
            "shortNames": {
              "description": "User-meaningful short name for entity.",
              "type": "array",
              "items": {
                "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
              }
            },
            "fullNames": {
              "description": "User-meaningful full name for entity.",
              "type": "array",
              "items": {
                "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
              }
            },
            "descriptions": {
              "description": "Long description for entity.",
              "type": "array",
              "items": {
                "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
              }
            }
          }
        },
        "UnitOfMeasure": {
          "description": "To convert between units of measure, a multiplication factor from reference plus an offset scalar is provided in the attributes ConversionScale and ConversionOffset, respectively.\nY[target unit of measure] = (X[reference unit of measure] * ConversionScale) + ConversionOffset\nY[reference unit of measure] = (X[target unit of measure] - ConversionOffset) / ConversionScale",
          "id": "UnitOfMeasure",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "UnitOfMeasure"
              ]
            },
            "conversionScale": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "conversionOffset": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "uomQuantity": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UOMQuantity"
            }
          }
        },
        "UOMQuantity": {
          "id": "UOMQuantity",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "UOMQuantity"
              ]
            },
            "unitsOfMeasure": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/UnitOfMeasure"
              }
            },
            "referenceUnitOfMeasure": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UnitOfMeasure"
            }
          }
        }
      }
    },
    "04-PropertySets": {
      "definitions": {
        "PropertyDefinition": {
          "id": "PropertyDefinition",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "05-Registry": {
      "definitions": {
        "AssetBase": {
          "description": "Abstract base class of Asset and Transducer.",
          "id": "AssetBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "type": {
              "anyOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetType"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSourceType"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerType"
                }
              ]
            },
            "registrationSite": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
            },
            "manufacturer": {
              "description": "The manufacturer that \"makes\" the Asset.",
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Manufacturer"
            },
            "model": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
            },
            "assetModelEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetModelEvent"
              }
            },
            "serialNumber": {
              "$ref": "CoreComponentType_2p0.json#/definitions/IDType"
            },
            "parentComponents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetComponent"
              }
            },
            "childComponents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetComponent"
              }
            },
            "criticality": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Criticality"
            },
            "readinessType": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/ReadinessType"
            },
            "purchaseConditionType": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/PurchaseConditionType"
            },
            "assetSegmentEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetSegmentEvent"
              }
            },
            "assetOwnerEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetOwnerEvent"
              }
            },
            "agentRoleWithAssets": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithAsset"
              }
            },
            "measurementLocations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation"
              }
            },
            "networkForAssets": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/10-Networks/definitions/NetworkForAsset"
              }
            },
            "fromConnections": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/11-NetworkConnections/definitions/AssetConnection"
              }
            },
            "toConnections": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/11-NetworkConnections/definitions/AssetConnection"
              }
            },
            "functions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/12-Functions/definitions/Function"
              }
            },
            "engineeringStudyEntryForAssets": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/13-EngineeringStudies/definitions/EngineeringStudyEntryForAsset"
              }
            },
            "orderedListForAssets": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedListForAsset"
              }
            },
            "actualEvents": {
              "description": "Note: This collection will only include direct instances of ActualEvent and not its subclasses (i.e., AssetSegmentEvent, AssetModelEvent, and AssetOwnerEvent).\n\nNote: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEvent"
              }
            },
            "hypotheticalEvents": {
              "description": "Note: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
              }
            },
            "proposedEvents": {
              "description": "Note: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEvent"
              }
            },
            "ambiguitySets": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/24-AmbiguitySets/definitions/AmbiguitySet"
              }
            },
            "healthAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/HealthAssessment"
              }
            },
            "remainingLifeAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/RemainingLifeAssessment"
              }
            },
            "recommendations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
              }
            },
            "solutionPackages": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
              }
            },
            "solutionPackageSteps": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackageStep"
              }
            },
            "requestsForWork": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork"
              }
            },
            "calendaredWorks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ConcreteCalendaredWorkClasses"
              }
            }
          }
        },
        "Asset": {
          "description": "A tangible, instantiated, serialized object. An Asset may be an entire facility, an entire functioning platform (such as an CH-47 Tail Number XYZ helicopter), or a component piece of equipment, such as a specific instance of a bearing. An Asset can be tracked over time and installed in a Segment. It may then be removed from the Segment and re-installed in a different Segment.\nNote: ShortName is the user identification tag which follows the nomenclature of the plant. This is normally an abbreviation or user-defined alpha-numeric code from which the plant derives meaning.",
          "id": "Asset",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Asset"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetType"
            }
          }
        },
        "AssetComponent": {
          "description": "A breakdown of assets into sub-asset components (child assets), to form serialized component part breakdown trees.",
          "id": "AssetComponent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AssetComponent"
              ]
            },
            "parent": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "child": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        },
        "AssetTypeBase": {
          "description": "Abstract base class of AssetType and TransducerType.",
          "id": "AssetTypeBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "materialMasterItems": {
              "type": "null"
            },
            "functions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/12-Functions/definitions/Function"
              }
            },
            "engineeringStudyEntriesForAssetType": {
              "type": "null"
            },
            "hypotheticalEvents": {
              "description": "Note: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
              }
            },
            "recommendations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
              }
            },
            "solutionPackages": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
              }
            },
            "solutionPackageSteps": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackageStep"
              }
            }
          },
          "incomplete": true
        },
        "AssetType": {
          "id": "AssetType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetTypeBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AssetType"
              ]
            }
          }
        },
        "Criticality": {
          "id": "Criticality",
          "type": "object",
          "properties": {
            "criticalityScaleType": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/CriticalityScaleType"
            },
            "value": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          },
          "required": [
            "criticalityScaleType"
          ]
        },
        "CriticalityScaleType": {
          "id": "CriticalityScaleType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "CriticalityScaleType"
              ]
            },
            "minimum": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "maximum": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        },
        "Organization": {
          "id": "Organization",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Organization"
              ]
            },
            "registeredSites": {
              "description": "Sites that are registered to an Organization. Note that this is different to Agent.RegistrationSite, which indicates which Site registers an Organization.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
              }
            }
          }
        },
        "OrganizationType": {
          "id": "OrganizationType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentTypeBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "OrganizationType"
              ]
            }
          }
        },
        "Manufacturer": {
          "id": "Manufacturer",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Manufacturer"
              ]
            },
            "manufacturedModels": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
              }
            },
            "manufacturedAssets": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                  }
                ],
                "required": [
                  "@@type"
                ]
              }
            }
          }
        },
        "Model": {
          "description": "Identifies a class or sub-class (\"model revision\", \"lot\", or \"variant\"/\"configuration\") of a manufacturer's products as defined by a manufacturer.\n\nThe hierarchies defined by ModelVariant and ModelRevision are orthogonal in that the Model Variants of a parent Model and the Model Revisions of the same parent may be incompatible. Moreover, the child Model of a ModelVariant may not be the parent of a ModelRevision, but the child Model of a ModelRevision may bethe parent of a ModelVariant.\n",
          "id": "Model",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Model"
              ]
            },
            "type": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetType"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSourceType"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerType"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "manufacturer": {
              "description": "The manufacturer that designs the Model.",
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Manufacturer"
            },
            "productFamily": {
              "description": "Product Family/Line.",
              "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
            },
            "productFamilyMember": {
              "description": "Member of Product Family/Line.",
              "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
            },
            "productFamilyMemberRevision": {
              "description": "Revision of Product Family Member.",
              "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
            },
            "partNumber": {
              "description": "Manufacturer's Part Number.",
              "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
            },
            "parentRevisions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/ModelRevision"
              }
            },
            "childRevisions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/ModelRevision"
              }
            },
            "parentVariants": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/ModelVariant"
              }
            },
            "childVariants": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/ModelVariant"
              }
            },
            "assetModelEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetModelEvent"
              }
            },
            "networkForModels": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/10-Networks/definitions/NetworkForModel"
              }
            },
            "functions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/12-Functions/definitions/Function"
              }
            },
            "engineeringStudyEntryForModels": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/13-EngineeringStudies/definitions/EngineeringStudyEntryForModel"
              }
            },
            "orderedListForModels": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedListForModel"
              }
            },
            "hypotheticalEvents": {
              "description": "Note: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
              }
            },
            "recommendations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
              }
            },
            "propertySetDefinitionsForModel": {
              "type": "null"
            }
          }
        },
        "ModelRevision": {
          "description": "A hierarchy of a manufacturer's product Model \"class\" (e.g. AH-64) which has revision \"releases\" (e.g. AH-64A) and/or may be sub-divided into \"lots\" (e.g. AH-64A Lot 1) which vary in some way from the \"parent\" Model.\n\nThe hierarchies defined by ModelVariant and ModelRevision are orthogonal in that the Model Variants of a parent Model and the Model Revisions of the same parent may be incompatible. Moreover, the child Model of a ModelVariant may not be the parent of a ModelRevision, but the child Model of a ModelRevision may be the parent of a ModelVariant.\n\nNOTE: This is different from a Model's Bill of Materials (BOM), which describes the decomposition of a single model into its sub-model child parts with associated quantities of each.\n\nNOTE: This is different from a Model Variant in that the child Model is anew \"release\" or \"lot\" of the parent Model rather than the result of some combination of selections defined on the parent.",
          "id": "ModelRevision",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "ModelRevision"
              ]
            },
            "parent": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
            },
            "child": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        },
        "ModelVariant": {
          "description": "A hierarchy of a manufacturer's product Model \"class\" (e.g. AH-64) which has customizable \"variants\" or \"configurations\" (e.g. AH-64 with inverted mounting) which vary in a controlled fashion from the \"parent\" Model.\n\nThe hierarchies defined by ModelVariant and ModelRevision are orthogonal in that the Model Variants of a parent Model and the Model Revisions of the same parent may be incompatible. Moreover, the child Model of a ModelVariant may not be the parent of a ModelRevision, but the child Model of a ModelRevision may be the parent of a ModelVariant.\n\nNOTE: This is different from a Model's Bill of Materials (BOM), which describes the decomposition of a single model into its sub-model child parts with associated quantities of each.\n\nNOTE: This is different from a Model Revision in that the child Model is always a restricted version of the parent Model as a result of some combination of selections defined on the parent, rather than a new \"release\" of the parent model.",
          "id": "ModelVariant",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "ModelVariant"
              ]
            },
            "parent": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
            },
            "child": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
            }
          }
        },
        "PurchaseConditionType": {
          "id": "PurchaseConditionType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "PurchaseConditionType"
              ]
            }
          }
        },
        "ReadinessType": {
          "id": "ReadinessType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "ReadinessType"
              ]
            }
          }
        },
        "SegmentBase": {
          "description": "Abstract base class of Segment and Site.",
          "id": "SegmentBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "type": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentType"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/SiteType"
                }
              ]
            },
            "registrationSite": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
            },
            "isTemplate": {
              "description": "Indicates if the logical Segment can be utilized as a prototype for physical Segments instances.",
              "type": "boolean"
            },
            "template": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
            },
            "isGroup": {
              "description": "Indicates if this segment is really a segment composed of two or more segments of the same type.",
              "type": "boolean"
            },
            "parentComponents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentComponent"
              }
            },
            "childComponents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentComponent"
              }
            },
            "criticality": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Criticality"
            },
            "assetSegmentEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetSegmentEvent"
              }
            },
            "materialItemOnSegments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/07-LogisticResources/definitions/MaterialItemOnSegment"
              }
            },
            "agentRoleWithSegments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithSegment"
              }
            },
            "measurementLocations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation"
              }
            },
            "networkForSegments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/10-Networks/definitions/NetworkForSegment"
              }
            },
            "fromConnections": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/11-NetworkConnections/definitions/SegmentConnection"
              }
            },
            "toConnections": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/11-NetworkConnections/definitions/SegmentConnection"
              }
            },
            "functions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/12-Functions/definitions/Function"
              }
            },
            "engineeringStudyEntryForSegments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/13-EngineeringStudies/definitions/EngineeringStudyEntryForSegment"
              }
            },
            "orderedListForSegments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedListForSegment"
              }
            },
            "actualEvents": {
              "description": "Note: This collection will only include direct instances of ActualEvent and not its subclasses (i.e., AssetSegmentEvent, AssetModelEvent, and AssetOwnerEvent).\n\nNote: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEvent"
              }
            },
            "hypotheticalEvents": {
              "description": "Note: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
              }
            },
            "proposedEvents": {
              "description": "Note: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEvent"
              }
            },
            "ambiguitySets": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/24-AmbiguitySets/definitions/AmbiguitySet"
              }
            },
            "healthAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/HealthAssessment"
              }
            },
            "remainingLifeAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/RemainingLifeAssessment"
              }
            },
            "recommendations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
              }
            },
            "solutionPackages": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
              }
            },
            "solutionPackageSteps": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackageStep"
              }
            },
            "requestsForWork": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork"
              }
            },
            "calendaredWorks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ConcreteCalendaredWorkClasses"
              }
            }
          }
        },
        "Segment": {
          "description": "An as-designed functional unit of a system, process used for engineering, operations, or maintenance where physical assets may be installed overtime.\nNote: ShortName is the user identification tag which follows the nomenclature of the plant. This is normally an abbreviation or user-defined alpha-numeric code from which the plant derives meaning.",
          "id": "Segment",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Segment"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentType"
            }
          }
        },
        "SegmentComponent": {
          "description": "A default decomposition of Segments into multiple sub-segments (child segments) to form a single breakdown structure. In fleet applications, a Breakdown Structure is recommended, except for specific applications such as paper form structures where there is only one published breakdown structure.",
          "id": "SegmentComponent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "SegmentComponent"
              ]
            },
            "parent": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
            },
            "child": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        },
        "SegmentTypeBase": {
          "description": "Abstract base class of SegmentType and StieType.",
          "id": "SegmentTypeBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "isMobile": {
              "description": "Mobile platform flag.",
              "type": "boolean"
            },
            "assetTypeForSegmentTypes": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetTypeForSegmentType"
              }
            },
            "functions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/12-Functions/definitions/Function"
              }
            },
            "engineeringStudyEntryForSegmentTypes": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/13-EngineeringStudies/definitions/EngineeringStudyEntryForSegmentType"
              }
            },
            "hypotheticalEvents": {
              "description": "Note: This is considered the \"inverse\" of the Event source association.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
              }
            },
            "recommendations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
              }
            },
            "solutionPackages": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
              }
            },
            "solutionPackageSteps": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackageStep"
              }
            }
          }
        },
        "SegmentType": {
          "description": "This entity standardizes the name of service segments: production processes, their inputs and outputs, physical structures, systems, mechanical devices, and mechanical device areas. Many of these segments appear on the engineering blueprints of the site. These are referred to as \"service segments\" in this model. Service segment types can be thought of as the labels which are used in plant layout drawings showing the process flow, machine trains, and physical buildings in a plant.",
          "id": "SegmentType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentTypeBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "SegmentType"
              ]
            }
          }
        },
        "Site": {
          "description": "An enterprise-defined object (manufacturing plant, facility, fleet platform object).\nFor facility applications, the \"Site\" can normally represents either the \"as-designed\" model of a building or the \"as-built\" build ing. For industrial and manufacturing applications, this entity normally represents the \"as-designed\" model of a physical plant or the \"as-built\" tangible plant. For fleet applications, this entity normally represents the \"as-designed\" model of a \"mobile platform\" (truck, vehicle, aircraft or tank) or the \"as-built\" tangible platform.",
          "id": "Site",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Site"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/SiteType"
            },
            "registrationOrganization": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
            },
            "registeredInfoSources": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/InfoSource"
              }
            },
            "registeredSegments": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
                  }
                ],
                "required": [
                  "@@type"
                ]
              }
            },
            "registeredAssets": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                  }
                ],
                "required": [
                  "@@type"
                ]
              }
            },
            "registeredAgents": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/05-Registry/definitions/Manufacturer"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
                  }
                ],
                "required": [
                  "@@type"
                ]
              }
            },
            "registeredMeasurementLocations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation"
              }
            }
          }
        },
        "SiteType": {
          "id": "SiteType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentTypeBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "SiteType"
              ]
            }
          }
        }
      }
    },
    "06-RegistryConfiguration": {
      "definitions": {
        "AssetModelEvent": {
          "description": "Tracks the Models that an Asset was associated with throughout the Asset's life.\nNote: the Asset's current Model is specified directly from the Asset entity.",
          "id": "AssetModelEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEventBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AssetModelEvent"
              ]
            },
            "asset": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "model": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
            }
          }
        },
        "AssetOwnerEvent": {
          "description": "Stores the change of owner of an asset over time.\nNote: The End field represents the date the asset was sold/purchased.",
          "id": "AssetOwnerEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEventBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AssetOwnerEvent"
              ]
            },
            "asset": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "purchasedFromOrganization": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
            },
            "purchasedFromSite": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
            },
            "soldToOrganization": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
            },
            "soldToSite": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
            },
            "purchaseConditionType": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/PurchaseConditionType"
            },
            "readinessType": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/ReadinessType"
            }
          }
        },
        "AssetSegmentEvent": {
          "description": "Associates a specific Asset with the Segment in which the Asset is/was installed/removed. Used for asset tracking.",
          "id": "AssetSegmentEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEventBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AssetSegmentEvent"
              ]
            },
            "asset": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "segment": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
                }
              ],
              "required": [
                "@@type"
              ]
            }
          }
        },
        "AssetTypeForSegmentType": {
          "description": "A constraint that indicates which asset types are suitable/applicable for which segment types. For hierarchical sets of asset types, a taxonomy can be referenced to indicate the hierarchy. For example, a validity constraint that associates the CCOM Reference Data \"Pump\" AssetType and \"Pump\" SegmentType using the CCOM Reference Data Asset Type Taxonomy will represent a constraint between the \"Pump\" SegmentType and the \"Pump\", \"Pump, Axial\", \"Pump, Centrifugal\", \"Pump, Displacement\" and so on, continuing down the asset type hierarchy.",
          "id": "AssetTypeForSegmentType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AssetTypeForSegmentType"
              ]
            },
            "assetType": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetType"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerType"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "segmentType": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentType"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/SiteType"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "assetTypeTaxonomy": {
              "$ref": "CCOM.json#/definitions/10-Networks/definitions/Taxonomy"
            }
          },
          "required": [
            "assetType"
          ]
        },
        "LifecyceStatusType": {
          "id": "LifecyceStatusType",
          "type": "null",
          "incomplete": true
        },
        "LifecycleStatusKind": {
          "id": "LifecycleStatusKind",
          "type": "null",
          "incomplete": true
        },
        "LifecycleStatusHistory": {
          "id": "LifecycleStatusHistory",
          "type": "null",
          "incomplete": true
        },
        "LifecycleStatusKindForType": {
          "id": "LifecycleStatusKindForType",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "07-LogisticResources": {
      "definitions": {
        "MaterialItemOnSegment": {
          "id": "MaterialItemOnSegment",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "08-Agents": {
      "definitions": {
        "AgentBase": {
          "description": "A physical-instantiated intelligent object (person, group, organization, or intelligent software) which can perform work, make diagnoses, health assessments, etc.  An Agent may also be instantiated as an Asset if it is to be monitored or tracked for financial or configuration management purposes.",
          "id": "AgentBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "type": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentType"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/OrganizationType"
                }
              ]
            },
            "registrationSite": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
            },
            "roles": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRole"
              }
            }
          }
        },
        "AgentTypeBase": {
          "description": "Abstract base class of AgentType and OrganizationType",
          "id": "AgentTypeBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ]
        },
        "Agent": {
          "description": "A physical-instantiated intelligent object (person, group, organization, or intelligent software) which can perform work, make diagnoses, health assessments, etc.  An Agent may also be instantiated as an Asset if it is to be monitored or tracked for financial or configuration management purposes.",
          "id": "Agent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Agent"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentType"
            }
          }
        },
        "AgentRole": {
          "description": "An agent's roles in relationship to other objects (other agents, the enterprise, assets, etc.) (i.e. equipment operator, maintenance supervisor, owner, etc.).",
          "id": "AgentRole",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentRole"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleType"
            },
            "agent": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Manufacturer"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
                }
              ]
            },
            "agentRoleWithAgents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithAgent"
              }
            },
            "agentRoleWithAssets": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithAsset"
              }
            },
            "agentRoleWithSegments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithSegment"
              }
            },
            "agentRoleWithEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/AgentRoleWithEvent"
              }
            },
            "agentRoleWithAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/AgentRoleWithAssessment"
              }
            },
            "agentRoleWithWorks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/AgentRoleWithWork"
              }
            }
          }
        },
        "AgentRoleType": {
          "id": "AgentRoleType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentRoleType"
              ]
            },
            "networkForAgentRoleTypes": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/10-Networks/definitions/NetworkForAgentRoleType"
              }
            }
          }
        },
        "AgentType": {
          "id": "AgentType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentTypeBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentType"
              ]
            }
          }
        },
        "AgentRoleWithAgent": {
          "description": "Defines roles for agents in relationship to other agents. In this context, possible agent role types might include Manager Of, Owner Of, Employer Of, Buyer From, etc.",
          "id": "AgentRoleWithAgent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentRoleWithAgent"
              ]
            },
            "agentRole": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRole"
            },
            "agent": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
            }
          },
          "required": [
            "agent"
          ]
        },
        "AgentRoleWithAsset": {
          "id": "AgentRoleWithAsset",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentRoleWithAsset"
              ]
            },
            "agentRole": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRole"
            },
            "asset": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                },
                {
                  "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                }
              ]
            }
          }
        },
        "AgentRoleWithSegment": {
          "id": "AgentRoleWithSegment",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentRoleWithSegment"
              ]
            },
            "agentRole": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRole"
            },
            "segment": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
                }
              ]
            }
          }
        }
      }
    },
    "09-MeasurementLocations": {
      "definitions": {
        "CalculationType": {
          "id": "CalculationType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "CalculationType"
              ]
            }
          }
        },
        "MeasurementLocationAssociation": {
          "description": "Measurement locations which are related to one another.  An example is to associate a vibration measurement location to its corresponding tachnometer signal measurement location and for multi-channel locations that are related to each other.",
          "id": "MeasurementLocationAssociation",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MeasurementLocationAssociation"
              ]
            },
            "relatedMeasurementLocation": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation"
            }
          },
          "required": [
            "relatedMeasurementLocation"
          ]
        },
        "MeasurementLocation": {
          "description": "Identifies the physical or virtual position on an asset or segment where actual measurements will be taken. These may be physical locations or virtual input/output ports.\nNote: ShortName is the user identification tag which follows the nomenclature of the plant. This is normally an abbreviation or user-defined alpha-numeric code from which the plant derives meaning.",
          "id": "MeasurementLocation",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "asset": {
                      "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                    }
                  },
                  "required": [
                    "asset"
                  ]
                },
                {
                  "properties": {
                    "segment": {
                      "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                    }
                  },
                  "required": [
                    "segment"
                  ]
                },
                {
                  "not": {
                    "anyOf": [
                      {
                        "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation/allOf/2/oneOf/0"
                      },
                      {
                        "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation/allOf/2/oneOf/1"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "measurementSource": {
                      "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
                    }
                  },
                  "required": [
                    "measurementSource"
                  ]
                },
                {
                  "properties": {
                    "measurementSourceType": {
                      "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSourceType"
                    }
                  },
                  "required": [
                    "measurementSourceType"
                  ]
                },
                {
                  "not": {
                    "anyOf": [
                      {
                        "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation/allOf/3/oneOf/0"
                      },
                      {
                        "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation/allOf/3/oneOf/1"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "oneOf": [
                {
                  "properties": {
                    "transducer": {
                      "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
                    }
                  },
                  "required": [
                    "transducer"
                  ]
                },
                {
                  "properties": {
                    "transducerType": {
                      "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerType"
                    }
                  },
                  "required": [
                    "transducerType"
                  ]
                },
                {
                  "not": {
                    "anyOf": [
                      {
                        "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation/allOf/4/oneOf/0"
                      },
                      {
                        "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation/allOf/4/oneOf/1"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MeasurementLocation"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocationType"
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "measurementSourceAddress": {
              "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
            },
            "transducerOrientationAngle": {
              "description": "Valid unit of measure is in Degrees.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "motionDirection": {
              "type": "string",
              "enum": [
                "Normal",
                "Reverse"
              ]
            },
            "userPrefix": {
              "$ref": "CoreComponentType_2p0.json#/definitions/CodeType"
            },
            "calculationParameter": {
              "description": "Parameter \"x\" used for the calculation.",
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "updateInterval": {
              "description": "Default frequency that measurements at this location will be updated.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "collectionDuration": {
              "description": "Default duration of collection for measurements at this location.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "XMLDataType": {
              "description": "The XML data type for the data stored in this measurement location.",
              "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
            },
            "XMLPatternRegularExpression": {
              "description": "The XML regular expression for character data stored in this measurement location.",
              "$ref": "CoreComponentType_2p0.json#/definitions/TextType"
            },
            "barcode": {
              "$ref": "CoreComponentType_2p0.json#/definitions/IDType"
            },
            "transducerAxisDirectionType": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerAxisDirectionType"
            },
            "valueClass": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueClass"
            },
            "UOMQuantity": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UOMQuantity"
            },
            "defaultUnitOfMeasure": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UnitOfMeasure"
            },
            "calculationType": {
              "description": "Default method that measurements are calculated from raw data.",
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/CalculationType"
            },
            "registrationSite": {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
            },
            "measurementLocationAssociations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocationAssociation"
              }
            },
            "regions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/17-StateRegions/definitions/MeasurementLocationRegion"
              }
            },
            "measurements": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
              }
            },
            "triggeredRegions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/20-TriggeredStateRegions/definitions/MeasurementLocationTriggeredRegion"
              }
            }
          }
        },
        "MeasurementLocationType": {
          "id": "MeasurementLocationType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MeasurementLocationType"
              ]
            },
            "UOMQuantity": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UOMQuantity"
            }
          }
        },
        "MeasurementSource": {
          "description": "Data sources used to take measurements (collectors, monitoring systems, etc.).",
          "id": "MeasurementSource",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MeasurementSource"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSourceType"
            }
          }
        },
        "MeasurementSourceType": {
          "id": "MeasurementSourceType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetTypeBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MeasurementSourceType"
              ]
            }
          }
        },
        "Transducer": {
          "description": "Transducers that are used to take measurements.\nThe OutputAmplitude and PerUnitOfMeasure fields describe the raw analog output signal which comes from the transducer (e.g. 200 millivolts) representing in one resulting unit of measure (the \"per\" unit of measure, e.g. MIL).",
          "id": "Transducer",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Transducer"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerType"
            },
            "outputAmplitude": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "perUnitOfMeasure": {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/UnitOfMeasure"
            },
            "lastCalibrated": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "isSelfPowered": {
              "type": "boolean"
            }
          },
          "required": [
            "outputAmplitude",
            "perUnitOfMeasure"
          ]
        },
        "TransducerType": {
          "description": "A subset of the AssetType entity which defines the kinds of assets which are valid kinds of transducers.\nNote: The ShortName attribute should store the abbreviation as defined for vibration in MIMOSA Document MIM-VB-001",
          "id": "TransducerType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetTypeBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "TransducerType"
              ]
            }
          }
        },
        "TransducerAxisDirectionType": {
          "description": "This entity stores types of sensitive axis directions which relate to transducers placed at measurement locations on machinery. The axis direction to use for monitoring rotating machinery should conform to the guidelines as specified in MIMOSA Document MIM-VB-001.",
          "id": "TransducerAxisDirectionType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "TransducerAxisDirectionType"
              ]
            }
          }
        }
      }
    },
    "10-Networks": {
      "definitions": {
        "NetworkForAsset": {
          "id": "NetworkForAsset",
          "type": "null",
          "incomplete": true
        },
        "NetworkForModel": {
          "id": "NetworkForModel",
          "type": "null",
          "incomplete": true
        },
        "NetworkForSegment": {
          "id": "NetworkForSegment",
          "type": "null",
          "incomplete": true
        },
        "Taxonomy": {
          "id": "Taxonomy",
          "type": "null",
          "incomplete": true
        },
        "NetworkForAgentRoleType": {
          "id": "NetworkForAgentRoleType",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "11-NetworkConnections": {
      "definitions": {
        "AssetConnection": {
          "id": "AssetConnection",
          "type": "null",
          "incomplete": true
        },
        "SegmentConnection": {
          "id": "SegmentConnection",
          "type": "null",
          "incomplete": true
        },
        "TypeConnection": {
          "id": "TypeConnection",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "12-Functions": {
      "definitions": {
        "Function": {
          "id": "Function",
          "type": "null",
          "incomplete": true
        },
        "FunctionAffectedByEvent": {
          "id": "FunctionAffectedByEvent",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "13-EngineeringStudies": {
      "definitions": {
        "EngineeringStudyEntry": {
          "id": "EngineeringStudyEntry",
          "type": "null",
          "incomplete": true
        },
        "EngineeringStudyEntryForAsset": {
          "id": "EngineeringStudyEntryForAsset",
          "type": "null",
          "incomplete": true
        },
        "EngineeringStudyEntryForModel": {
          "id": "EngineeringStudyEntryForModel",
          "type": "null",
          "incomplete": true
        },
        "EngineeringStudyEntryForSegment": {
          "id": "EngineeringStudyEntryForSegment",
          "type": "null",
          "incomplete": true
        },
        "EngineeringStudyEntryForSegmentType": {
          "id": "EngineeringStudyEntryForSegmentType",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "14-OrderedLists": {
      "definitions": {
        "OrderedList": {
          "id": "OrderedList",
          "type": "null",
          "incomplete": true
        },
        "OrderedListForAsset": {
          "id": "OrderedListForAsset",
          "type": "null",
          "incomplete": true
        },
        "OrderedListForModel": {
          "id": "OrderedListForModel",
          "type": "null",
          "incomplete": true
        },
        "OrderedListForSegment": {
          "id": "OrderedListForSegment",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "15-SignalProcessingSetups": {
      "definitions": {
        "AverageSynchType": {
          "id": "AverageSynchType",
          "type": "null",
          "incomplete": true
        },
        "AverageWeightType": {
          "id": "AverageWeightType",
          "type": "null",
          "incomplete": true
        },
        "CPBSetup": {
          "id": "CPBSetup",
          "type": "null",
          "incomplete": true
        },
        "FFTSetup": {
          "id": "FFTSetup",
          "type": "null",
          "incomplete": true
        },
        "OrderedMeasLocationWithUOMItemSignalProcessSetup": {
          "id": "OrderedMeasLocationWithUOMItemSignalProcessSetup",
          "type": "null",
          "incomplete": true
        },
        "PostScalingType": {
          "id": "PostScalingType",
          "type": "null",
          "incomplete": true
        },
        "SignalProcessBlock": {
          "id": "SignalProcessBlock",
          "type": "null",
          "incomplete": true
        },
        "SignalProcessBlockType": {
          "id": "SignalProcessBlockType",
          "type": "null",
          "incomplete": true
        },
        "SignalProcessBlockInStream": {
          "id": "SignalProcessBlockInStream",
          "type": "null",
          "incomplete": true
        },
        "SignalProcessSetup": {
          "id": "SignalProcessSetup",
          "type": "null",
          "incomplete": true
        },
        "SignalProcessStream": {
          "id": "SignalProcessStream",
          "type": "null",
          "incomplete": true
        },
        "SignalProcessStreamType": {
          "id": "SignalProcessStreamType",
          "type": "null",
          "incomplete": true
        },
        "SourceDetectorType": {
          "id": "SourceDetectorType",
          "type": "null",
          "incomplete": true
        },
        "TimeWaveformSetup": {
          "id": "TimeWaveformSetup",
          "type": "null",
          "incomplete": true
        },
        "VectorSetup": {
          "id": "VectorSetup",
          "type": "null",
          "incomplete": true
        },
        "WindowType": {
          "id": "WindowType",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "17-StateRegions": {
      "definitions": {
        "MeasurementLocationRegion": {
          "id": "MeasurementLocationRegion",
          "type": "null",
          "incomplete": true
        },
        "SeverityLevelType": {
          "id": "SeverityLevelType",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "18-Measurements": {
      "definitions": {
        "ConcreteMeasurementClasses": {
          "description": "Convenience grouping for oneOf the concrete Measurement classes.",
          "id": "ConcreteMeasurementClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/CPBMeasurement"
            },
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/FFTMeasurement"
            },
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/OffsetArrayMeasurement"
            },
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/SingleDataMeasurement"
            },
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/TimeWaveformMeasurement"
            },
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/VectorMeasurement"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "CPBMeasurement": {
          "description": "A signal-processed real linear Constant Percentage Band spectrum.",
          "id": "CPBMeasurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "CPBMeasurement"
              ]
            },
            "CPBSetup": {
              "$ref": "CCOM.json#/definitions/15-SignalProcessingSetups/definitions/CPBSetup"
            },
            "postScalingType": {
              "$ref": "CCOM.json#/definitions/15-SignalProcessingSetups/definitions/PostScalingType"
            },
            "rotationalSpeed": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "data": {
              "description": "A variable-length binary field, containing 4-byte IEEE float real values for each band in the spectra.\nThe IEEE format is:\n  ->  Low-Order Byte First\n\tbits 0-22  -> Mantissa\n\tbits 23-30 -> Exponent\n\tbit 31     -> Sign",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BinaryData"
            }
          },
          "required": [
            "data"
          ]
        },
        "DataQualityType": {
          "description": "Various quality states with which data can be classified.\nMIMOSA Reference Data entries come from the ISO 9000-2 status guidelines.",
          "id": "DataQualityType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "DataQualityType"
              ]
            }
          }
        },
        "FFTMeasurement": {
          "description": "A signal-processed real or complex FFT measurement that is related to frequency or order ranges.",
          "id": "FFTMeasurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "FFTMeasurement"
              ]
            },
            "FFTSetup": {
              "$ref": "CCOM.json#/definitions/15-SignalProcessingSetups/definitions/FFTSetup"
            },
            "postScalingType": {
              "$ref": "CCOM.json#/definitions/15-SignalProcessingSetups/definitions/PostScalingType"
            },
            "rotationalSpeed": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "isComplex": {
              "type": "boolean"
            },
            "data": {
              "description": "A variable-length binary field, containing 4-byte IEEE float real values for each line of resolution in the spectra. Imaginary double values in 4-byte IEEE format follow the set of real values.\nThe IEEE format is:\n  ->  Low-Order Byte First\n\tbits 0-22  -> Mantissa\n\tbits 23-30 -> Exponent\n\tbit 31     -> Sign",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BinaryData"
            }
          },
          "required": [
            "isComplex",
            "data"
          ]
        },
        "MeasurementGrid": {
          "description": "2-D linear rectangular grid of numeric data associated with binary measurement data. Used for radiological data in thermography, thickness data in ultrasonic testing, etc.\nNote: The Data field must be of type BinaryData. Grid data starts with coordinates (DataOrigin/X, DataOrigin/Y) and progressing vertically downward (increment Y) until DataEnd/Y is exceeded, whereupon Y is then set to DataOrigin/Y and X is incremented until (DataEnd/X, DataEnd/Y) is reached.",
          "id": "MeasurementGrid",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MeasurementGrid"
              ]
            },
            "measurement": {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            },
            "resolution": {
              "description": "Total dimensions of the rectangular grid related to the binary data (grid resolution).",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Coordinate"
            },
            "dataOrigin": {
              "description": "X, Y coordinates of the origin of the 0-based rectangular grid for the \"data rectangle\" (top left-most corner).",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Coordinate"
            },
            "dataEnd": {
              "description": "X, Y coordinates of the end of the 0-based rectangular grid for the \"data rectangle\" (lower right-most corner).",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Coordinate"
            }
          },
          "required": [
            "resolution",
            "dataOrigin",
            "dataEnd"
          ]
        },
        "MeasurementAssociation": {
          "description": "Measurements that are related to one another. This is used in vibration to associate a vibration measurement to its corresponding tachometer signal measurement and for multi-channel data that are related to each other.",
          "id": "MeasurementAssociation",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "MeasurementAssociation"
              ]
            },
            "measurement": {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            },
            "relatedMeasurement": {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            }
          },
          "required": [
            "measurement",
            "relatedMeasurement"
          ]
        },
        "Measurement": {
          "description": "A record of a measurement at a Measurement Location at an associated time.",
          "id": "Measurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "oneOf": [
            {
              "description": "Note: The Asset and Segment association allows a monitoring system to log the current installed serialized asset (if a segment-based measurement location) or the segment where the serialized asset is located (if an asset-based measurement location) at the time of measurement.",
              "properties": {
                "asset": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                }
              },
              "required": [
                "asset"
              ]
            },
            {
              "properties": {
                "segment": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                }
              },
              "required": [
                "segment"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement/oneOf/1"
                  }
                ]
              }
            }
          ],
          "properties": {
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "start": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "end": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "recorded": {
              "description": "When the measurement was stored/captured on the original source system or platform.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "calculationParameter": {
              "description": "Parameter \"x\" used for the calculation.",
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "confidence": {
              "description": "Confidence in measurement accuracy where 0 is no confidence and 100 is complete confidence.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Percentage"
            },
            "measurementLocation": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation"
            },
            "measurementSource": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
            },
            "transducer": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
            },
            "dataQualityType": {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/DataQualityType"
            },
            "measurementLocationType": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocationType"
            },
            "calculationType": {
              "description": "Actual method that measurement was calculated from raw data.",
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/CalculationType"
            },
            "measurementAssociations": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/MeasurementAssociation"
              }
            },
            "triggeredRegions": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/20-TriggeredStateRegions/definitions/TriggeredRegionMeasurement"
              }
            }
          }
        },
        "OffsetArrayMeasurement": {
          "description": "Used for representing large amounts of numeric data with the same unit of measure that was captured intermittently over a period of time (at different offsets) relative to a single base reference time (Start field, which is an offset of 0).\nPeriodically collected time waveform numeric data (e.g. every second) should use Measurement.\nNote: The Data field must be of type BinaryData and represent the data array associated with the offset data.",
          "id": "OffsetArrayMeasurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "OffsetArrayMeasurement"
              ]
            },
            "count": {
              "description": "Total number of offset/value data pairs.",
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "offsets": {
              "description": "Variable-length array of time-related (e.g. millisecond, second) offsets from Start (time \"0\").",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BinaryData"
            },
            "values": {
              "description": "Variable-length array of values corresponding to an offset.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BinaryData"
            }
          },
          "required": [
            "count",
            "offsets",
            "values"
          ]
        },
        "SingleDataMeasurement": {
          "id": "SingleDataMeasurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "SingleDataMeasurement"
              ]
            },
            "data": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/ValueContent"
            },
            "measurementGrids": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/MeasurementGrid"
              }
            }
          },
          "required": [
            "data"
          ]
        },
        "TimeWaveformMeasurement": {
          "description": "A signal-processed real or complex time waveform measurement. A complex time waveform is obtained when you have a decimated signal over a certain frequency range.",
          "id": "TimeWaveformMeasurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "TimeWaveformMeasurement"
              ]
            },
            "timeWaveformSetup": {
              "$ref": "CCOM.json#/definitions/15-SignalProcessingSetups/definitions/TimeWaveformSetup"
            },
            "rotationalSpeed": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "isComplex": {
              "type": "boolean"
            },
            "data": {
              "description": "A variable-length binary field, containing 4-byte IEEE float real values. Imaginary double values in 4-byte IEEE format follow the set of real values.\nThe IEEE format is:\n  ->  Low-Order Byte First\n\tbits 0-22  -> Mantissa\n\tbits 23-30 -> Exponent\n\tbit 31     -> Sign",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BinaryData"
            }
          },
          "required": [
            "isComplex",
            "data"
          ]
        },
        "VectorMeasurement": {
          "description": "A signal-processed single amplitude or single vector measurement that is related to frequency or order ranges.",
          "id": "VectorMeasurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "VectorMeasurement"
              ]
            },
            "vectorSetup": {
              "$ref": "CCOM.json#/definitions/15-SignalProcessingSetups/definitions/VectorSetup"
            },
            "postScalingType": {
              "$ref": "CCOM.json#/definitions/15-SignalProcessingSetups/definitions/PostScalingType"
            },
            "rotationalSpeed": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "amplitude": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "direction": {
              "description": "Valid unit of measure is in Degrees.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            }
          },
          "required": [
            "amplitude"
          ]
        }
      }
    },
    "20-TriggeredStateRegions": {
      "definitions": {
        "MeasurementLocationTriggeredRegion": {
          "id": "MeasurementLocationTriggeredRegion",
          "type": "null",
          "incomplete": true
        },
        "TriggeredRegionMeasurement": {
          "id": "TriggeredRegionMeasurement",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "21-Events": {
      "description": "Classes and relationships from diagrams 21-Events and 22-Event Relationships.",
      "definitions": {
        "ActualEventBase": {
          "description": "An actual logged event (alarm/operational change/abnormal condition) related to a segment or asset at a specific point in time or during a specific interval of time.",
          "id": "ActualEventBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/TimestampedEvent"
            }
          ],
          "properties": {
            "substantiatedByMeasurements": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/SubstantiatedByMeasurement"
              }
            }
          }
        },
        "ConcreteEventClasses": {
          "description": "Convenience grouping for oneOf the concrete event classes.",
          "id": "ConcreteEventClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteTimestampedEventClasses"
            },
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "ConcreteTimestampedEventClasses": {
          "description": "Convenience grouping for oneOf the concrete timestamped event classes.",
          "id": "ConcreteTimestampedEventClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteActualEventClasses"
            },
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEvent"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "ConcreteActualEventClasses": {
          "description": "Convenience grouping for oneOf the concrete actual event classes.",
          "id": "ConcreteActualEventClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEvent"
            },
            {
              "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetModelEvent"
            },
            {
              "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetOwnerEvent"
            },
            {
              "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetSegmentEvent"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "ActualEvent": {
          "description": "An actual logged event (alarm/operational change/abnormal condition) related to a segment or asset at a specific point in time or during a specific interval of time.",
          "id": "ActualEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEventBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "ActualEvent"
              ]
            }
          }
        },
        "AgentRoleWithEvent": {
          "id": "AgentRoleWithEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentRoleWithEvent"
              ]
            },
            "agentRole": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRole"
            },
            "event": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteEventClasses"
            }
          }
        },
        "ChangePatternType": {
          "description": "Different kinds of change patterns observed in problems.",
          "id": "ChangePatternType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "ChangePatternType"
              ]
            }
          }
        },
        "Event": {
          "id": "Event",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "type": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/EventType"
            },
            "entity": {
              "description": "Typically Events are associated with Assets, AssetTypes, Segments, SegmentTypes, Models, and Ports. Specific Entity subclasses define the \"inverse\" association to specific subclasses of Event.",
              "$ref": "CCOM.json#/properties/CCOMData/properties/entities/items"
            },
            "causeLinks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/EventLink"
              }
            },
            "effectLinks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/EventLink"
              }
            },
            "agentRoleWithEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/AgentRoleWithEvent"
              }
            },
            "functionAffectedByEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/12-Functions/definitions/FunctionAffectedByEvent"
              }
            },
            "recommendationFromEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/RecommendationFromEvent"
              }
            }
          }
        },
        "EventLink": {
          "description": "Cause and effect linkages between events in a causal network.",
          "id": "EventLink",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "EventLink"
              ]
            },
            "causeEvent": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteEventClasses"
            },
            "effectEvent": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteEventClasses"
            },
            "likelihood": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Probability"
            }
          }
        },
        "EventType": {
          "description": "Different kinds of events including operating events and failure events such as Logged Operating Events, Failure \"Modes\", Failure \"Effects\", Failure \"Mechanisms\", Defect Events Abnormal Situations, Alarm Events, etc.\nAn event is NOT work performed by an entity, but a log of the actual events which occurred at a service segment or asset over time.",
          "id": "EventType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "EventType"
              ]
            },
            "solutionPackages": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
              }
            }
          }
        },
        "TimestampedEvent": {
          "description": "If either a Start or End is provided, this indicates either a point-in-time event or that the other attribute is unknown.\n\nIf both a Start and End is provided, this indicates an activity with duration.",
          "id": "TimestampedEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/Event"
            }
          ],
          "properties": {
            "start": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "end": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "startPosition": {
              "$ref": "CCOM.json#/definitions/23-GeospatialTracking/definitions/GeoPosition"
            },
            "endPosition": {
              "$ref": "CCOM.json#/definitions/23-GeospatialTracking/definitions/GeoPosition"
            },
            "requestCauses": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/Request"
              }
            },
            "requestEffects": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/ConcreteRequestClasses"
              }
            },
            "activeWorkCauses": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ConcreteActiveWorkClasses"
              }
            },
            "activeWorkEffects": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ConcreteActiveWorkClasses"
              }
            },
            "completedWorkCauses": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/30-CompletedWork/definitions/CompletedWork"
              }
            },
            "completedWorkEffects": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/30-CompletedWork/definitions/CompletedWork"
              }
            }
          }
        },
        "Evidence": {
          "id": "Evidence",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "oneOf": [
            {
              "properties": {
                "actualEvent": {
                  "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteActualEventClasses"
                }
              },
              "required": [
                "actualEvent"
              ]
            },
            {
              "properties": {
                "measurement": {
                  "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
                }
              },
              "required": [
                "measurement"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/21-Events/definitions/Evidence/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/21-Events/definitions/Evidence/oneOf/1"
                  }
                ]
              }
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Evidence"
              ]
            }
          }
        },
        "HypotheticalEvent": {
          "description": "Possible failure modes and effects from an engineering study (often FMECA and RCM analysis).",
          "id": "HypotheticalEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/Event"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "HypotheticalEvent"
              ]
            },
            "severityLevelType": {
              "$ref": "CCOM.json#/definitions/17-StateRegions/definitions/SeverityLevelType"
            },
            "proposedEventForHypotheticalEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEventForHypotheticalEvent"
              }
            },
            "orderedLists": {
              "description": "Can be used to detail the ordered lists of Algorithm templates that can be used to detect a failure mode (HypotheticalEvent).",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedList"
              }
            },
            "documents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/31-Documents/definitions/Document"
              }
            },
            "solutionPackages": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
              }
            }
          }
        },
        "ProposedEvent": {
          "description": "A proposed event that might have occurred in the past, present or future that explains events and measurement events, including diagnostic/prognostic event outputs.",
          "id": "ProposedEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/TimestampedEvent"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "ProposedEvent"
              ]
            },
            "severityLevelType": {
              "$ref": "CCOM.json#/definitions/17-StateRegions/definitions/SeverityLevelType"
            },
            "likelihood": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Probability"
            },
            "changePatternType": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ChangePatternType"
            },
            "audit": {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Audit"
            },
            "evidences": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/Evidence"
              }
            },
            "proposedEventForHypotheticalEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEventForHypotheticalEvent"
              }
            }
          }
        },
        "ProposedEventForHypotheticalEvent": {
          "id": "ProposedEventForHypotheticalEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "ProposedEventForHypotheticalEvent"
              ]
            },
            "proposedEvent": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEvent"
            },
            "hypotheticalEvent": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
            }
          }
        },
        "SubstantiatedByMeasurement": {
          "id": "SubstantiatedByMeasurement",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "SubstantiatedByMeasurement"
              ]
            },
            "measurement": {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/Measurement"
            },
            "byAgent": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
            }
          },
          "required": [
            "measurement"
          ]
        }
      }
    },
    "23-GeospatialTracking": {
      "definitions": {
        "GeoPosition": {
          "id": "GeoPosition",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "24-AmbiguitySets": {
      "definitions": {
        "AmbiguitySet": {
          "id": "AmbiguitySet",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "25-HealthAndPrognosticAssessments": {
      "definitions": {
        "ConcreteAssessmentClasses": {
          "description": "Convenience grouping of concrete subclasses of Assessment.",
          "id": "ConcreteAssessmentClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Audit"
            },
            {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/HealthAssessment"
            },
            {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/RemainingLifeAssessment"
            },
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStatus"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "AgentRoleWithAssessment": {
          "id": "AgentRoleWithAssessment",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "AgentRoleWithAssessment"
              ]
            },
            "agentRole": {
              "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRole"
            },
            "assessment": {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/ConcreteAssessmentClasses"
            }
          }
        },
        "Assessment": {
          "id": "Assessment",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "assessed": {
              "description": "Timestamp when the assessment was performed by the agent.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "agentRoleWithAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/AgentRoleWithAssessment"
              }
            },
            "audit": {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Audit"
            }
          }
        },
        "Audit": {
          "id": "Audit",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Assessment"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Audit"
              ]
            },
            "dataQualityType": {
              "$ref": "CCOM.json#/definitions/18-Measurements/definitions/DataQualityType"
            }
          }
        },
        "HealthAssessment": {
          "description": "An assessment of a specific entity's health.",
          "id": "HealthAssessment",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Assessment"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "HealthAssessment"
              ]
            },
            "healthLevelPrecise": {
              "description": "Precise health level from a scale of 0 to 1 where 1 is perfect health.",
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "confidence": {
              "description": "Confidence that the assessment is accurate.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Percentage"
            },
            "healthLevelType": {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/HealthLevelType"
            },
            "changePatternType": {
              "$ref": "CCOM.json#/definitions/21-Events/definitions/ChangePatternType"
            },
            "substantiatingEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteTimestampedEventClasses"
              }
            },
            "recommendationFromHealthAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/RecommendationFromHealthAssessment"
              }
            }
          }
        },
        "HealthLevelType": {
          "id": "HealthLevelType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "HealthLevelType"
              ]
            },
            "healthScale": {
              "description": "Health on a 0 to 100 scale where 100 is the maximum health.",
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        },
        "RemainingLifeAssessment": {
          "description": "An assessment of the remaining life of an entity.",
          "id": "RemainingLifeAssessment",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Assessment"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RemainingLifeAssessment"
              ]
            },
            "estimate": {
              "description": "Estimated remaining life.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "error": {
              "description": "Error estimate (+/- X duration).",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "confidence": {
              "description": "Confidence that the assessment is accurate.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Percentage"
            }
          }
        }
      }
    },
    "26-Recommendations": {
      "definitions": {
        "Recommendation": {
          "description": "Used to capture recommendations resulting from an event or health assessment (e.g. as part of an advisory generation process), possibly triggering a request for work.",
          "id": "Recommendation",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "oneOf": [
            {
              "properties": {
                "segmentType": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentType"
                }
              },
              "required": [
                "segmentType"
              ]
            },
            {
              "properties": {
                "assetType": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetType"
                }
              },
              "required": [
                "assetType"
              ]
            },
            {
              "properties": {
                "segment": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                }
              },
              "required": [
                "segment"
              ]
            },
            {
              "properties": {
                "model": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
                }
              },
              "required": [
                "model"
              ]
            },
            {
              "properties": {
                "asset": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                }
              },
              "required": [
                "asset"
              ]
            },
            {
              "properties": {
                "orderedList": {
                  "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedList"
                }
              },
              "required": [
                "orderedList"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation/oneOf/1"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation/oneOf/2"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation/oneOf/3"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation/oneOf/4"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation/oneOf/5"
                  }
                ]
              }
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Recommendation"
              ]
            },
            "priorityLevelType": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/PriorityLevelType"
            },
            "recommendationFromEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/RecommendationFromEvent"
              }
            },
            "recommendationFromHealthAssessments": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/RecommendationFromHealthAssessment"
              }
            },
            "substantiatedByMeasurements": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/SubstantiatedByMeasurement"
              }
            },
            "requestForWorks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork"
              }
            },
            "recommendationWorkRequests": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/RecommendationWorkRequest"
              }
            },
            "recommendationWorkSteps": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/RecommendationWorkStep"
              }
            }
          }
        },
        "RecommendationFromEvent": {
          "id": "RecommendationFromEvent",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RecommendationFromEvent"
              ]
            },
            "recommendation": {
              "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
            },
            "event": {
              "$ref": "CCOM.json#/properties/CCOMData/properties/entities/items"
            }
          }
        },
        "RecommendationFromHealthAssessment": {
          "id": "RecommendationFromHealthAssessment",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RecommendationFromHealthAssessment"
              ]
            },
            "recommendation": {
              "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
            },
            "healthAssessment": {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/HealthAssessment"
            }
          }
        }
      }
    },
    "27-SolutionPackages": {
      "definitions": {
        "Work": {
          "id": "Work",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "priorityLevelType": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/PriorityLevelType"
            },
            "workManagementType": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/WorkManagementType"
            },
            "workTaskType": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/WorkTaskType"
            },
            "agentRoleWithWorks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/AgentRoleWithWork"
              }
            }
          }
        },
        "SolutionPackage": {
          "id": "SolutionPackage",
          "type": "null",
          "incomplete": true
        },
        "SolutionPackageStep": {
          "id": "SolutionPackageStep",
          "type": "null",
          "incomplete": true
        },
        "AgentRoleWithWork": {
          "id": "AgentRoleWithWork",
          "type": "null",
          "incomplete": true
        },
        "Cycle": {
          "id": "Cycle",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Cycle"
              ]
            },
            "repeatInterval": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "measurementLocation": {
              "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation"
            }
          },
          "required": [
            "repeatInterval"
          ]
        },
        "WorkTaskType": {
          "id": "WorkTaskType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkTaskType"
              ]
            },
            "workManagementType": {
              "description": "This WorkTaskType is only applicable for the specified WorkManagementType.",
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/WorkManagementType"
            }
          }
        },
        "WorkManagementType": {
          "id": "WorkManagementType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkManagementType"
              ]
            }
          }
        },
        "PriorityLevelType": {
          "description": "A categorization of priority. For example, High Priority, Low Priority.",
          "id": "PriorityLevelType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "PriorityLevelType"
              ]
            },
            "priorityScale": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        }
      }
    },
    "28-Requests": {
      "definitions": {
        "RequestBase": {
          "description": "Abstract base type for Request types (Request, RequestForInformation, and RequestForWork). Holds agents' requisitions for work, materials, tools, and/or labor.",
          "id": "RequestBase",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            },
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Nameable"
            }
          ],
          "properties": {
            "type": {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestType"
            },
            "fromAgent": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Manufacturer"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "toAgent": {
              "oneOf": [
                {
                  "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Manufacturer"
                },
                {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
                }
              ],
              "required": [
                "@@type"
              ]
            },
            "priorityLevelType": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/PriorityLevelType"
            },
            "engineeringStudyEntries": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/13-EngineeringStudies/definitions/EngineeringStudyEntry"
              }
            },
            "requiredOrderedLists": {
              "description": "Pre-work ordered list (e.g. Bill of Material, Bill of Labor) needed for a request.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedList"
              }
            },
            "eventCauses": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteTimestampedEventClasses"
              }
            },
            "eventEffects": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteTimestampedEventClasses"
              }
            },
            "parentRequest": {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestChild"
            },
            "childRequests": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestChild"
              }
            }
          }
        },
        "ConcreteRequestClasses": {
          "id": "ConcreteRequestClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/Request"
            },
            {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForInformation"
            },
            {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "Request": {
          "description": "Holds agents' requisitions for work, materials, tools, and/or labor.",
          "id": "Request",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "Request"
              ]
            }
          }
        },
        "RequestType": {
          "description": "This entity standardizes the kinds of requisitions that can be made by an agent. For example, a request kind could be created for Make and Model Match-up.",
          "id": "RequestType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RequestType"
              ]
            }
          }
        },
        "RequestChild": {
          "description": "A Request may comprise a set of child Requests. If order is specified, it implies that the child Requests should be completed in the specified order.\n\nThe child Requests are considered contained in the parent for purposes of deletion semantics. For example, if the parent Request is soft-deleted, all child requests (that is both the RequestChild relationship and the Request itself) must be soft-deleted. \n\nNote: there is no constraint on the propagation of lifecycle status changes as valid propagation depends on the type of Request. That is, if a parent Request is marked complete it is not implied that all child Requests are complete.",
          "id": "RequestChild",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RequestChild"
              ]
            },
            "parent": {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/ConcreteRequestClasses"
            },
            "child": {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/ConcreteRequestClasses"
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        },
        "RequestForInformation": {
          "description": "A formal requisition for information about something of interest.\n\t\t\t\tFor example, an RFI might be issued between an O/O and a supplier to obtain information regarding model specifications.",
          "id": "RequestForInformation",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestBase"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RequestForInformation"
              ]
            },
            "respondBy": {
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "referredEntity": {
              "$ref": "CCOM.json#/properties/CCOMData/properties/entities/items"
            }
          }
        },
        "RequestForWork": {
          "description": "An requisition for an action to be taken to a work management system.",
          "id": "RequestForWork",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestBase"
            }
          ],
          "oneOf": [
            {
              "properties": {
                "segment": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                }
              },
              "required": [
                "segment"
              ]
            },
            {
              "properties": {
                "asset": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                }
              },
              "required": [
                "asset"
              ]
            },
            {
              "properties": {
                "orderedList": {
                  "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedList"
                }
              },
              "required": [
                "orderedList"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork/oneOf/1"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork/oneOf/2"
                  }
                ]
              }
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RequestForWork"
              ]
            },
            "workManagementType": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/WorkManagementType"
            },
            "workTaskType": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/WorkTaskType"
            },
            "isAutomaticallyApproved": {
              "description": "Request automatic generation of work order.",
              "type": "boolean"
            },
            "startBefore": {
              "description": "Request for action to begin before this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "endBefore": {
              "description": "Request for action to end before this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "startAfter": {
              "description": "Request for action to begin after this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "endAfter": {
              "description": "Request for action to end after this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "repeatInterval": {
              "description": "Time interval to re-submit time-based actions.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/Measure"
            },
            "solutionPackage": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
            },
            "recommendation": {
              "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
            },
            "activeWorks": {
              "description": "Associated Work Request and/or Work Order.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ConcreteActiveWorkClasses"
              }
            }
          }
        }
      }
    },
    "29-WorkManagement": {
      "definitions": {
        "ConcreteActiveWorkClasses": {
          "id": "ConcreteActiveWorkClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrder"
            },
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkRequest"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "ConcreteCalendaredWorkClasses": {
          "id": "ConcreteCalendaredWorkClasses",
          "oneOf": [
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkRequest"
            },
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrder"
            },
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStep"
            },
            {
              "$ref": "CCOM.json#/definitions/30-CompletedWork/definitions/CompletedWork"
            }
          ],
          "required": [
            "@@type"
          ]
        },
        "ActiveWork": {
          "id": "ActiveWork",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/CalendaredWork"
            }
          ],
          "properties": {
            "solutionPackage": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackage"
            },
            "timestampedEvents": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteTimestampedEventClasses"
              }
            },
            "requestForWorks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork"
              }
            },
            "eventCauses": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteTimestampedEventClasses"
              }
            },
            "eventEffects": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ConcreteTimestampedEventClasses"
              }
            }
          }
        },
        "CalendaredWork": {
          "id": "CalendaredWork",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/Work"
            }
          ],
          "oneOf": [
            {
              "properties": {
                "segment": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
                }
              },
              "required": [
                "segment"
              ]
            },
            {
              "properties": {
                "asset": {
                  "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
                }
              },
              "required": [
                "asset"
              ]
            },
            {
              "properties": {
                "orderedList": {
                  "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedList"
                }
              },
              "required": [
                "orderedList"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/CalendaredWork/oneOf/0"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/CalendaredWork/oneOf/1"
                  },
                  {
                    "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/CalendaredWork/oneOf/2"
                  }
                ]
              }
            }
          ],
          "properties": {
            "startBefore": {
              "description": "Request for action to begin before this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "endBefore": {
              "description": "Request for action to end before this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "startAfter": {
              "description": "Request for action to begin after this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "endAfter": {
              "description": "Request for action to end after this time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "actualStart": {
              "description": "Actual start time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "actualEnd": {
              "description": "Actual completion time.",
              "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/UTCDateTime"
            },
            "engineeringStudyEntries": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/13-EngineeringStudies/definitions/EngineeringStudyEntry"
              }
            },
            "workStatuses": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStatus"
              }
            },
            "completedWorks": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/30-CompletedWork/definitions/CompletedWork"
              }
            }
          }
        },
        "RecommendationWorkRequest": {
          "id": "RecommendationWorkRequest",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RecommendationWorkRequest"
              ]
            },
            "recommendation": {
              "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
            },
            "workRequest": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkRequest"
            }
          }
        },
        "RecommendationWorkStep": {
          "id": "RecommendationWorkStep",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "RecommendationWorkStep"
              ]
            },
            "recommendation": {
              "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
            },
            "workStep": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStep"
            }
          }
        },
        "WorkStatus": {
          "description": "Defines the status of the work at a given point in time.",
          "id": "WorkStatus",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Assessment"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkStatus"
              ]
            },
            "type": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStatusType"
            },
            "calendaredWork": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ConcreteCalendaredWorkClasses"
            }
          }
        },
        "WorkStatusType": {
          "id": "WorkStatusType",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/BaseType"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkStatusType"
              ]
            }
          }
        },
        "WorkOrder": {
          "description": "A collection of one or more Work Requests (optionally associated with Solution Packages) which are broken into steps, scheduled, and completed over time.",
          "id": "WorkOrder",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ActiveWork"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkOrder"
              ]
            },
            "triggeringCycle": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/Cycle"
            },
            "workRequests": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkRequest"
              }
            },
            "steps": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStep"
              }
            },
            "parentHierarchies": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrderHierarchy"
              }
            },
            "childHierarchies": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrderHierarchy"
              }
            },
            "standingCycles": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/Cycle"
              }
            }
          }
        },
        "WorkOrderHierarchy": {
          "description": "Relationship of master parent work order to follow-on work orders.",
          "id": "WorkOrderHierarchy",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/03-Core/definitions/Entity"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkOrderHierarchy"
              ]
            },
            "parent": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrder"
            },
            "child": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrder"
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            }
          }
        },
        "WorkRequest": {
          "description": "Created and tracked by a work management system, once a request for work has been transmitted and successfully received.",
          "id": "WorkRequest",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/ActiveWork"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkRequest"
              ]
            },
            "workOrder": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrder"
            },
            "recommendationWorkRequests": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/RecommendationWorkRequest"
              }
            }
          }
        },
        "WorkStep": {
          "description": "An individual step of a Solution Package, Work Request, or Work Order.",
          "id": "WorkStep",
          "type": "object",
          "allOf": [
            {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/CalendaredWork"
            }
          ],
          "properties": {
            "@@type": {
              "type": "string",
              "enum": [
                "WorkStep"
              ]
            },
            "workOrder": {
              "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrder"
            },
            "order": {
              "$ref": "CoreComponentType_2p0.json#/definitions/NumericType"
            },
            "solutionPackageStep": {
              "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/SolutionPackageStep"
            },
            "requiredOrderedLists": {
              "description": "Associated ordered lists (Bill of Material, Bill of Labor, etc.) needed by a Work Step.",
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/14-OrderedLists/definitions/OrderedList"
              }
            },
            "recommendationWorkSteps": {
              "type": "array",
              "items": {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/RecommendationWorkStep"
              }
            }
          }
        }
      }
    },
    "30-CompletedWork": {
      "definitions": {
        "CompletedWork": {
          "id": "CompletedWork",
          "type": "null",
          "incomplete": true
        }
      }
    },
    "31-Documents": {
      "definitions": {
        "Document": {
          "id": "Document",
          "type": "null",
          "incomplete": true
        }
      }
    }
  },
  "type": "object",
  "properties": {
    "CCOMData": {
      "type": "object",
      "description": "A top-level object for exchanging a collection of CCOM Entity objects. Each Entity must be of a concrete type.",
      "properties": {
        "@ccomVersion": {
          "type": "string",
          "pattern": "^4[.]([1-9]|[1-9]\\d*)[.]\\d+(-(draft|rc\\d+))?$",
          "notes": "The pattern exludes matching of 4.0.x, as the JSON serialisation is introduced from 4.1 onwards."
        },
        "entities": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/BLOBDataType"
              },
              {
                "$ref": "CCOM.json#/definitions/02-CoreTypes/definitions/StandardDataType"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/CCOMClass"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/EffectiveStatus"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/EffectiveStatusType"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/Enumeration"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/EnumerationItem"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/Equivalency"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/InfoSource"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/InfoSourceType"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/MultiParameterType"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/Property"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/PropertyType"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/UnitOfMeasure"
              },
              {
                "$ref": "CCOM.json#/definitions/03-Core/definitions/UOMQuantity"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Asset"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetComponent"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/AssetType"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/CriticalityScaleType"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Manufacturer"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Model"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/ModelRevision"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/ModelVariant"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Organization"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/OrganizationType"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/PurchaseConditionType"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/ReadinessType"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Segment"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentComponent"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/SegmentType"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/Site"
              },
              {
                "$ref": "CCOM.json#/definitions/05-Registry/definitions/SiteType"
              },
              {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetModelEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetOwnerEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetSegmentEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/06-RegistryConfiguration/definitions/AssetTypeForSegmentType"
              },
              {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/Agent"
              },
              {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRole"
              },
              {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleType"
              },
              {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithAgent"
              },
              {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithAsset"
              },
              {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentRoleWithSegment"
              },
              {
                "$ref": "CCOM.json#/definitions/08-Agents/definitions/AgentType"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/CalculationType"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocationAssociation"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocation"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementLocationType"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSource"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/MeasurementSourceType"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/Transducer"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerType"
              },
              {
                "$ref": "CCOM.json#/definitions/09-MeasurementLocations/definitions/TransducerAxisDirectionType"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/CPBMeasurement"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/DataQualityType"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/FFTMeasurement"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/MeasurementAssociation"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/MeasurementGrid"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/OffsetArrayMeasurement"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/SingleDataMeasurement"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/TimeWaveformMeasurement"
              },
              {
                "$ref": "CCOM.json#/definitions/18-Measurements/definitions/VectorMeasurement"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ActualEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/AgentRoleWithEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ChangePatternType"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/EventLink"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/EventType"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/Evidence"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/HypotheticalEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/ProposedEventForHypotheticalEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/21-Events/definitions/SubstantiatedByMeasurement"
              },
              {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/AgentRoleWithAssessment"
              },
              {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/Audit"
              },
              {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/HealthAssessment"
              },
              {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/HealthLevelType"
              },
              {
                "$ref": "CCOM.json#/definitions/25-HealthAndPrognosticAssessments/definitions/RemainingLifeAssessment"
              },
              {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/Recommendation"
              },
              {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/RecommendationFromEvent"
              },
              {
                "$ref": "CCOM.json#/definitions/26-Recommendations/definitions/RecommendationFromHealthAssessment"
              },
              {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/Cycle"
              },
              {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/PriorityLevelType"
              },
              {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/WorkManagementType"
              },
              {
                "$ref": "CCOM.json#/definitions/27-SolutionPackages/definitions/WorkTaskType"
              },
              {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/Request"
              },
              {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestChild"
              },
              {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForInformation"
              },
              {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestForWork"
              },
              {
                "$ref": "CCOM.json#/definitions/28-Requests/definitions/RequestType"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/RecommendationWorkRequest"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/RecommendationWorkStep"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrder"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkOrderHierarchy"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkRequest"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStatus"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStatusType"
              },
              {
                "$ref": "CCOM.json#/definitions/29-WorkManagement/definitions/WorkStep"
              }
            ],
            "required": [
              "@@type"
            ]
          }
        }
      },
      "additionalProperties": false
    }
  },
  "patternProperties": {
    "^[$].+$": {
      "description": "Keyword properties of any type can be included.",
      "type": [
        "array",
        "boolean",
        "integer",
        "null",
        "number",
        "object",
        "string"
      ]
    }
  },
  "additionalProperties": false
}